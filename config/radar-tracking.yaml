# SHSA model for radar sensor tracks


# Additional Python modules can be specified via utils. The given files are
# imported/loaded via `exec(open(fn).read())`, when a relation or substitution
# is executed.

utils:
  - "../config/radar-tracking.py"


# We add constraints to the relations. The function of the relations are only
# executed when the constraint evaluates to True.

relations:

  # TODO: in case we have some global vehicle tracker that fuses the tracks of
  # the sensor, we can check this output too
  r4:
    x:
      in: [x_global]
      fct: "x_global"
    y:
      in: [y_global]
      fct: "y_global"

  # the monitor additionally saves the last observation of each track (of a
  # neighbor or the sensor itself) and forward estimates the position
  r36:
    x:
      in: [x_old, vx_old, t_old, t, y_old, vy_old, location_x, location_y, sensor_heading, range, angle]
      fct: "x_old + vx_old*(t-t_old)"
      constraint: "in_field_of_view([x, y_old + vy_old*(t-t_old)], [location_x, location_y], sensor_heading, range, angle)"
    y:
      in: [y_old, vy_old, t_old, t, x_old, vx_old, location_x, location_y, sensor_heading, range, angle]
      fct: "y_old + vy_old*(t-t_old)"
      constraint: "in_field_of_view([x_old + vx_old*(t-t_old), y], [location_x, location_y], sensor_heading, range, angle)"

  # considering [x,y] and [x_nbr, y_nbr] belong to the same vehicle, then
  # assign the track of the neighboring sensor if its in the field of view of
  # the sensor
  r7:
    x:
      in: [x_nbr, y_nbr, location_x, location_y, sensor_heading, range, angle]
      fct: "x_nbr"
      constraint: "in_field_of_view([x_nbr, y_nbr], [location_x, location_y], sensor_heading, range, angle)"
    y:
      in: [x_nbr, y_nbr, location_x, location_y, sensor_heading, range, angle]
      fct: "y_nbr"
      constraint: "in_field_of_view([x_nbr, y_nbr], [location_x, location_y], sensor_heading, range, angle)"


properties:

  # type will be generated, however this dictionary 'properties' and at least 1
  # key/element (here: 'provision') has to be available

  # x,y can be published in one topic, however, in the current (csv-)monitor
  # understands only each variable under a separate topic.

  provision:
    t: ["t"]
    x: ["x"]
    y: ["y"]
    x_nbr: ["x_nbr"]
    y_nbr: ["y_nbr"]
    t_old: ["t_old"]
    x_old: ["x_old"]
    y_old: ["y_old"]
    vx_old: ["vx_old"]
    vy_old: ["vy_old"]

  # retrieved from sensorList.csv
  constant:
    location_x: 259.81
    location_y: -150
    range: 50  # max range of a sensor (m)
    angle: 1.047197567  # field of view of a sensor (rad)
    sensor_heading: 0  # heading of a sensor, center of fov in x-axis (rad)
    vehicle_heading: -0.523598783  # heading of a vehicles (rad)
